name: 📚 Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    name: 🏗️ Build Static Site
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🔧 Setup Pages
      uses: actions/configure-pages@v3

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: 📦 Install dependencies
      run: |
        pip install mkdocs mkdocs-material pymdown-extensions mkdocs-awesome-pages-plugin

    - name: 📚 Generate navigation
      run: |
        python .github/scripts/generate_navigation.py

    - name: 🔧 Create MkDocs configuration
      run: |
        cat > mkdocs.yml << 'EOF'
        site_name: Tutorial Flutter untuk Pemula
        site_description: Tutorial Flutter komprehensif dalam bahasa Indonesia
        site_author: Flutter Tutorial Team
        site_url: https://your-username.github.io/flutter-tutorial-pemula

        theme:
          name: material
          palette:
            - scheme: default
              primary: blue
              accent: light blue
              toggle:
                icon: material/brightness-7
                name: Switch to dark mode
            - scheme: slate
              primary: blue
              accent: light blue
              toggle:
                icon: material/brightness-4
                name: Switch to light mode
          features:
            - navigation.tabs
            - navigation.sections
            - navigation.expand
            - navigation.path
            - navigation.top
            - search.highlight
            - content.code.copy
            - content.action.edit
            - content.action.view

        markdown_extensions:
          - pymdownx.highlight:
              anchor_linenums: true
          - pymdownx.inlinehilite
          - pymdownx.snippets
          - pymdownx.superfences
          - pymdownx.tabbed:
              alternate_style: true
          - pymdownx.emoji:
              emoji_index: !!python/name:materialx.emoji.twemoji
              emoji_generator: !!python/name:materialx.emoji.to_svg
          - admonition
          - pymdownx.details
          - toc:
              permalink: true

        plugins:
          - search:
              lang: id
          - awesome-pages

        nav:
          - Home: index.md
          - Tutorial:
            - 'docs/01-pendahuluan.md'
            - 'docs/02-persiapan-environment.md'
            - 'docs/03-dart-fundamentals.md'
            - 'docs/04-konsep-dasar-flutter.md'
            - 'docs/05-proyek-pertama.md'
            - 'docs/06-widget-dasar-layout.md'
            - 'docs/07-styling-theming.md'
            - 'docs/08-state-management-sederhana.md'
            - 'docs/09-navigasi-routing.md'
            - 'docs/10-working-with-data.md'
            - 'docs/11-testing-basics.md'
            - 'docs/12-proyek-mini-todo-list.md'
            - 'docs/13-build-deployment.md'
            - 'docs/14-developer-tools-debugging.md'
            - 'docs/15-next-steps-advanced-topics.md'
          - Projects:
            - 'projects/hello_world/README.md'
            - 'projects/counter_app/README.md'
            - 'projects/todo_list_app/README.md'
          - References:
            - 'docs/glossary.md'
            - 'docs/cheat-sheets.md'
            - 'docs/resources.md'

        extra:
          social:
            - icon: fontawesome/brands/github
              link: https://github.com/your-username/flutter-tutorial-pemula
          analytics:
            provider: google
            property: G-XXXXXXXXXX

        copyright: Copyright &copy; 2024 Flutter Tutorial Team
        EOF

    - name: 📝 Create index page
      run: |
        cp README.md docs/index.md

    - name: 🏗️ Build with MkDocs
      run: |
        mkdocs build --clean --strict

    - name: 📤 Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: site/

  # Deploy job
  deploy:
    name: 🚀 Deploy to Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

    - name: 🎉 Deployment Success
      run: |
        echo "🎉 Tutorial deployed successfully!"
        echo "📚 Site URL: ${{ steps.deployment.outputs.page_url }}"

  # Lighthouse audit job
  lighthouse:
    name: 🏮 Lighthouse Audit
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🏮 Run Lighthouse audit
      uses: treosh/lighthouse-ci-action@v9
      with:
        urls: |
          ${{ needs.deploy.outputs.page_url }}
          ${{ needs.deploy.outputs.page_url }}/docs/01-pendahuluan/
          ${{ needs.deploy.outputs.page_url }}/docs/glossary/
        configPath: '.github/workflows/lighthouse-config.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

  # SEO and performance check
  seo-check:
    name: 🔍 SEO & Performance Check
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🔍 Check sitemap
      run: |
        curl -f "${{ needs.deploy.outputs.page_url }}/sitemap.xml" || echo "Sitemap not found"

    - name: 🤖 Check robots.txt
      run: |
        curl -f "${{ needs.deploy.outputs.page_url }}/robots.txt" || echo "Robots.txt not found"

    - name: 📊 Performance metrics
      run: |
        echo "Checking page load times..."
        time curl -s "${{ needs.deploy.outputs.page_url }}" > /dev/null

  # Broken link check on deployed site
  link-check-deployed:
    name: 🔗 Check Links on Deployed Site
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🔗 Check external links
      run: |
        pip install requests beautifulsoup4
        python .github/scripts/check_deployed_links.py "${{ needs.deploy.outputs.page_url }}"

  # Notification job
  notify:
    name: 📢 Notify Deployment
    runs-on: ubuntu-latest
    needs: [deploy, lighthouse, seo-check, link-check-deployed]
    if: always() && github.ref == 'refs/heads/main'

    steps:
    - name: 🎉 Success notification
      if: needs.deploy.result == 'success'
      run: |
        echo "✅ Tutorial successfully deployed to GitHub Pages!"
        echo "🌐 URL: ${{ needs.deploy.outputs.page_url }}"
        echo "📊 All quality checks completed"

    - name: ❌ Failure notification
      if: needs.deploy.result != 'success'
      run: |
        echo "❌ Deployment failed!"
        echo "Please check the logs for details."
        exit 1